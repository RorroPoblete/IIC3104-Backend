services:
  # Microservicio mínimo de Health
  health-service:
    build:
      context: ./microservices/health-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/healthdb
      - REDIS_URL=redis://redis:6379
      - FRONTEND_ORIGIN=http://localhost:8000
    depends_on:
      - postgres
      - redis
    networks:
      - backend-network

  # Microservicio de Codificación
  codification-service:
    build:
      context: ./microservices/codification-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - CODIFICATION_SERVICE_PORT=3004
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/healthdb
      - CORS_ORIGIN=http://localhost:8000
      - UPLOAD_PATH=/app/uploads
      - MAX_FILE_SIZE=10485760
    volumes:
      - codification_uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - backend-network

  # Base de datos PostgreSQL (maestros e histórico)
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=healthdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  # Cache Redis (validaciones)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - backend-network

volumes:
  postgres_data:
  redis_data:
  codification_uploads:

networks:
  backend-network:
    driver: bridge
