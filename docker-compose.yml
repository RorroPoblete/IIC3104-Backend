services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/healthdb
      REDIS_URL: redis://redis:6379
      CORS_ORIGIN: http://localhost:8000
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760
      AUTH0_DOMAIN: ${AUTH0_DOMAIN:-dev-zf0t1haoznajlc0p.us.auth0.com}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE:-https://uc-grd-api}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID:-iAykGccBga5TpUWEul4FmtP2w1lRp2In}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend-network

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: healthdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d healthdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-network

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  backend-network:
    driver: bridge
